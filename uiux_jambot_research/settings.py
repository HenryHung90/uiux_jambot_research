"""
Django settings for uiux_jambot_research project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

from dotenv import load_dotenv

load_dotenv(dotenv_path='.env')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY", "django-insecure-59tdvwhooe$y0b1x)7ge7#=$yekud!4@oyi&q^$cfoe+mu1^#_")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG", "True") == "True"

AUTH_USER_MODEL = 'backend.Student'

# Optionally, you can allow all headers and methods
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]
CORS_ALLOW_METHODS = [
    'GET',
    'POST',
    'PUT',
    'PATCH',
    'DELETE',
    'OPTIONS'
]

# Application definition

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # libraries
    'corsheaders',
    'rest_framework',
    'django_filters',
    # API
    'backend',
    'django_extensions',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # coresheaders
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    # 自定義 Middleware
    "backend.middleware.IPBlockerMiddleware",
    "backend.middleware.AuthenticationMiddleware",
]

ROOT_URLCONF = "uiux_jambot_research.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        'DIRS': ['frontend/dist'],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "uiux_jambot_research.wsgi.application"

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# Determine whether the environment is production or development
PROCESS_ON_PRODUCTION = os.getenv('PROCESS_ON_PRODUCTION', 'False').lower() == 'true'



if PROCESS_ON_PRODUCTION:
    # 生產環境使用 PostgreSQL
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': os.getenv('DB_NAME', 'uiux_jambot'),
            'USER': os.getenv('DB_USER', 'postgres'),
            'PASSWORD': os.getenv('DB_PASSWORD', 'postgres'),
            'HOST': os.getenv('DB_HOST', 'db'),
            'PORT': os.getenv('DB_PORT', '5432'),
        }
    }

    ALLOWED_HOSTS = ["cj5418.synology.me", 'localhost']
    X_FRAME_OPTIONS = 'SAMEORIGIN'

    # 生產環境 - 使用子路徑
    MIDDLEWARE_EXEMPT_PATHS = [
        '/api/login',
        '/',
        '/files/img/logo.PNG',
        '/vite.svg',
        '/',
        '/files/img/logo.PNG',
        '/vite.svg'
    ]
    MIDDLEWARE_ADMIN_PREFIX = '/api/admin/'

    CORS_ALLOWED_ORIGINS = [
        "http://cj5418.synology.me:8080",
        "https://cj5418.synology.me:8080",
    ]
    CSRF_TRUSTED_ORIGINS = [
        "http://cj5418.synology.me:8080",
        "https://cj5418.synology.me:8080",
    ]
    CORS_ALLOW_CREDENTIALS = True
else:
    # 開發環境使用 SQLite3
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "db.sqlite3",
        }
    }

    CORS_ALLOWED_ORIGINS = [
        "http://localhost:5173",  # Vite 開發伺服器的預設位址
    ]
    CSRF_TRUSTED_ORIGINS = [
        "http://localhost:5173",  # Vite 開發伺服器的預設位址
    ]
    CORS_ALLOW_CREDENTIALS = True
    # 開發環境 - 直接路徑
    MIDDLEWARE_EXEMPT_PATHS = [
        '/api/login',
        '/',
        '/files/img/logo.PNG',
        '/vite.svg'
    ]
    MIDDLEWARE_ADMIN_PREFIX = '/api/admin/'

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Taipei'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "frontend/dist/static"),
]
STATIC_URL = os.getenv('STATIC_URL', '/static/')
MEDIA_URL = os.getenv('MEDIA_URL', '/files/')
STATIC_ROOT = os.path.join(BASE_DIR, os.getenv('STATIC_ROOT', 'static'))
MEDIA_ROOT = os.path.join(BASE_DIR, os.getenv('MEDIA_ROOT', 'files'))

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# 打印數據庫配置以便調試
print(f"DATABASE CONFIG: {DATABASES['default']}")
print(f"PROCESS_ON_PRODUCTION: {PROCESS_ON_PRODUCTION}")
print(f"DB_USER: {os.getenv('DB_USER', 'not set')}")
print(f"DB_HOST: {os.getenv('DB_HOST', 'not set')}")
